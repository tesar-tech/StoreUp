# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master
pr: none 

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  majorMinorBuildVer: "1.1"
  buildNum: $[counter(variables['majorMinorBuildVer'], 0)]
  versionOfApp: '$(majorMinorBuildVer).$(buildNum).0'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VersionAPPX@2
  inputs:
    Path: '$(Build.SourcesDirectory)'
    VersionNumber: '$(versionOfApp)'
    InjectVersion: False
    VersionRegex: '(0|[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])(\.(0|[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])){3}'
    OutputVersion: 'OutputedVersion'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always 
                  /p:UapAppxPackageBuildMode=StoreUpload 
                  /p:AppxPackageSigningEnabled=false'
    configuration: '$(buildConfiguration)'

- task: store-publish@0
  inputs:
    serviceEndpoint: 'NaWinDevCenter'
    appId: '9PH5NNZ5BXFQ'
    metadataUpdateMethod: 'JsonMetadata'
    metadataPath: '$(system.defaultworkingdirectory)\NoApp\Store\appMetadata'
    updateImages: true
    packagePath: '$(appxPackageDir)\*.msixupload'
    force: false
    skipPolling: false
    deletePackages: true
    numberOfPackagesToKeep: '5'